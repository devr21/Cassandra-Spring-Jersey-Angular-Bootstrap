<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>JaxRS Application</display-name>
   <welcome-file-list>
   	<welcome-file>bookManagement.jsp</welcome-file>
   </welcome-file-list>
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<listener>
    	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  	</listener>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		    classpath:spring/applicationContext.xml
		   
		</param-value>
	</context-param>
	
	<!-- <filter>
    <filter-name>jersey</filter-name>
    <filter-class>org.glassfish.jersey.servlet.ServletContainer</filter-class>
    <init-param>
        <param-name>com.sun.jersey.config.property.packages</param-name>
        <param-value>com.test.jersey.rest.resources</param-value>
    </init-param>
    <init-param>
        <param-name>com.sun.jersey.config.property.JSPTemplatesBasePath</param-name>
        <param-value>/WEB-INF/views</param-value>
    </init-param>
    <init-param>
        <param-name>com.sun.jersey.config.property.WebPageContentRegex</param-name>
        <param-value>/(resources|(WEB-INF/jsp))/.*</param-value>
    </init-param>
</filter>
<filter-mapping>
    <filter-name>jersey</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping> -->
 
	<servlet>
		<servlet-name>jersey-servlet</servlet-name>
		<servlet-class>
			org.glassfish.jersey.servlet.ServletContainer
		</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>com.test.jersey.rest.RestJaxRsApplication</param-value>
						
		</init-param>
		<init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>com.test.jersey.rest.resources</param-value>
        </init-param>	
		<init-param>
          <param-name>jersey.config.server.mvc.templateBasePath.jsp</param-name>
          <param-value>/WEB-INF/views</param-value>
      </init-param>
      <init-param>
          <param-name>jersey.config.server.provider.classnames</param-name>
          <param-value>org.glassfish.jersey.server.mvc.jsp.JspMvcFeature</param-value>
      </init-param>
			
		<load-on-startup>1</load-on-startup>
	</servlet>
 
	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>
	
    <!--Hook into spring security-->
   <!--  <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/manifest/*</url-pattern>
    </filter-mapping>	 -->
     
	<!-- <resource-ref>
        <description>Database resource for rest demo web application </description>
        <res-ref-name>jdbc/restDemoDB</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>	
	<resource-ref>
        <description>Database resource for legacy system of demo rest web application </description>
        <res-ref-name>jdbc/restDemoLegacyDB</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>	 -->    
</web-app>